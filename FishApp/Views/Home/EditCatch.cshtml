@using FishApp.Enums
@model CatchViewModel




<div class="container" id="container-create">
    <h1>Editera fångst</h1>

    <div class="col-lg-6">
        <h2>@Model.FishName</h2>
        @Html.ValidationSummary()
        @using (Html.BeginForm())
        {
            <div id="create-div">
                <label>  @Html.LabelFor(p => Model.ParishesSelectListItems)</label>
                @Html.DropDownListFor(p => Model.ParishId, Model.ParishesSelectListItems.OrderBy(c => c.Text), new { @class = "form-control" })
                @Html.ValidationMessageFor(p => Model.ParishesSelectListItems)
            </div>
            <div id="create-div">
                @Html.LabelFor(t => Model.FishingGroundType)
                @Html.DropDownListFor(t => Model.FishingGroundType, Html.GetEnumSelectList(typeof(FishingGroundType)), new { @class = "form-control" })
                @Html.ValidationMessageFor(t => Model.FishingGroundType)
            </div>
            <div id="create-div">
                @Html.LabelFor(m => Model.FishesSelectListItems)
                @Html.DropDownListFor(m => Model.FishId, Model.FishesSelectListItems.OrderBy(c => c.Text), new { @class = "form-control" })
                @Html.ValidationMessageFor(m => Model.FishesSelectListItems)
            </div>
            <div class="form-group" id="create-div">
                @Html.LabelFor(fg => Model.FishingGroundName)
                @Html.TextBoxFor(fg => Model.FishingGroundName, new { @class = "form-control" })
                @Html.ValidationMessageFor(fg => Model.FishingGroundName)
            </div>
            <div class="form-group" id="create-div">
                @Html.LabelFor(l => Model.Length)
                @Html.TextBoxFor(l => Model.Length, new { @class = "form-control" })
                @Html.ValidationMessageFor(l => Model.Length)
            </div>
            <div class="form-group" id="create-div">
                @Html.LabelFor(w => Model.Weight)
                @Html.TextBoxFor(w => Model.Weight, new { @class = "form-control" })
                @Html.ValidationMessageFor(w => Model.Weight)
            </div>
            <div class="form-group" id="create-div">
                <label asp-for="Date"></label>
                <input type="date" class="form-control" asp-for="Date" />
                <span asp-validation-for="Date"></span>
            </div>
            <div class="form-group" id="create-div-notes">
                @Html.LabelFor(n => Model.Notes)
                @Html.TextAreaFor(n => Model.Notes, new { @class = "form-control", @rows = "10" })
                @Html.ValidationMessageFor(w => Model.Notes)
            </div>
            <div class="form-group" , hidden="">
                @Html.LabelFor(d => Model.FishingGroundId)
                @Html.TextBoxFor(d => Model.FishingGroundId, new { @class = "form-control" })
            </div>
            <div class="form-group" , hidden="">
                @Html.LabelFor(d => Model.Id)
                @Html.TextBoxFor(d => Model.Id, new { @class = "form-control" })
            </div>
            <div>
                <input class="btn btn-primary" type="submit" value="Spara" asp-route-id="@Model.Id" />
                <a asp-action="Index" style="float: right;">Hem</a>
                @*<input class="btn btn-default" type="submit" style="float: right;" id="btn-create-home" asp-action="Index" value="Hem" />*@
                <br />
            </div>
        }

    </div>

</div>