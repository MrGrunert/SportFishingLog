@model FishApp.ViewModels.CatchViewModel

@{
    ViewData["Title"] = "Create";
}

<h2>Logga fångst</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div id="create-div">
                @Html.LabelFor(p => p.ParishesSelectListItems)
                @Html.DropDownListFor(p => p.ParishId, Model.ParishesSelectListItems.OrderBy(c => c.Text), new { @class = "form-control", Text = "Active", Value = "True", Selected = "True" })
                @Html.ValidationMessageFor(p => p.ParishesSelectListItems)
            </div>
            <div id="create-div">
                @Html.LabelFor(t => t.FishingGroundType)
                @Html.DropDownListFor(t => t.FishingGroundType, Html.GetEnumSelectList(typeof(FishingGroundType)), new { @class = "form-control", Text = "Active", Value = "True", Selected = "True" })
                @Html.ValidationMessageFor(t => t.FishingGroundType)
            </div>
            <div id="create-div">
                @Html.LabelFor(m => m.FishesSelectListItems)
                @Html.DropDownListFor(m => m.FishId, Model.FishesSelectListItems.OrderBy(f => f.Text), new { @class = "form-control", Text = "Active", Value = "True", Selected = "True" })
                @Html.ValidationMessageFor(m => m.FishesSelectListItems)
            </div>
            <div class="form-group" id="create-div">
                @Html.LabelFor(fg => fg.FishingGroundName)
                @Html.TextBoxFor(fg => fg.FishingGroundName, new { @class = "form-control" })
                @Html.ValidationMessageFor(fg => fg.FishingGroundName)
            </div>
            <div class="form-group" id="create-div">
                @Html.LabelFor(l => l.Length)
                @Html.TextBoxFor(l => l.Length, new { @class = "form-control" })
                @Html.ValidationMessageFor(l => l.Length)
            </div>
            <div class="form-group" id="create-div">
                @Html.LabelFor(w => w.Weight)
                @Html.TextBoxFor(w => w.Weight, new { @class = "form-control" })
                @Html.ValidationMessageFor(w => w.Weight)
            </div>
            <div class="form-group" id="create-div">
                <label asp-for="Date"></label>
                <input type="date" class="form-control" asp-for="Date" />
                <span asp-validation-for="Date"></span>
            </div>

            <div class="form-group" id="create-div-notes">
                @Html.LabelFor(n => n.Notes)
                @Html.TextAreaFor(n => n.Notes, new { @class = "form-control", @rows = "4" })
                @Html.ValidationMessageFor(w => w.Notes)
            </div>

            <div>
                <input class="btn btn-success" type="submit" value="Spara" />
                <input class="btn btn-dark"  style="float: right;" id="btn-create-home" asp-action="Index" value="Hem" />
            </div>
        </form>
    </div>
</div>

@*<div>
    <a asp-action="Index">Tillbaka</a>
</div>*@

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
